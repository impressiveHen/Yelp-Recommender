{"version":3,"sources":["Assets/yelp-black.jpg","Config.js","Components/Recomm.js","Components/NoMatch.js","Components/FireBase.js","Components/StartPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","API_KEY","initialData","Recomm","props","useState","isLoading","setIsLoading","details","setDetails","history","useHistory","useEffect","recPar","location","state","selectedId","fetch","headers","method","body","JSON","stringify","then","response","json","console","log","result","forEach","id","axios","get","Authorization","res","data","catch","err","style","textAlign","marginTop","className","Container","Row","map","detail","key","width","margin","borderStyle","borderWidth","borderColor","Card","Img","variant","src","image_url","background","height","Body","ListGroup","Item","name","city","categories","title","rating","Button","onClick","goBack","fontSize","NoMatch","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","StartPage","carIndex","setCarIndex","idData","justifyContent","marginBottom","Image","YelpBackGround","marginRight","roundedCircle","Col","xs","md","Carousel","activeIndex","onSelect","selectedIndex","index","alt","push","pathname","Caption","color","App","setIdData","database","ref","on","snapshot","val","newIdData","i","rand","Math","floor","random","length","toString","basename","exact","path","render","component","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b9d2f45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yelp-black.8c5dfcbd.jpg\";","export const API_KEY = 'cPV6XVnkeoPWs6r0oWMSMnbqqe73LK9945o0qaQHBwqGUpRtpBsP7kDe77uBN1-DNniaYTdNG-HiNmH7GISeY5DNXwCuRYhumrr2hH9AwOEsS13Oainls3cnRroCXnYx'\r\n\r\nexport const initialData = [\r\n    {\r\n        \"id\": \"WavvLdfdP6g8aZTtbBQHTw\", \r\n        \"name\": \"Gary Danko\", \r\n        \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/CPc91bGzKBe95aM5edjhhQ/o.jpg\", \r\n        \"rating\": 4.5, \r\n        \"location\": {\"city\": \"San Francisco\",\"state\": \"CA\"},\r\n        \"categories\": [{\"alias\": \"newamerican\", \"title\": \"American (New)\"}]\r\n    },\r\n    {\r\n        \"id\": \"arhKqyXJiPBEcmOne0B3_Q\", \r\n        \"name\": \"Tazza Deli & Grill\", \r\n        \"image_url\": \"https://s3-media1.fl.yelpcdn.com/bphoto/nMJQpqWs_2XbGZDl6FUhXQ/o.jpg\",\r\n        \"rating\": 4, \r\n        \"location\": {\"city\": \"Calgary\",\"state\": \"AB\"},\r\n        \"categories\": [{\"alias\": \"mideastern\", \"title\": \"Middle Eastern\"}]\r\n    },\r\n    {\r\n        \"id\": \"hZvyXM5wy8O_zC3HiLWI9A\", \r\n        \"name\": \"Costa Market\", \r\n        \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/Kt7J2GQ4ChZoLcSqtyCHhg/o.jpg\", \r\n        \"rating\": 4.5, \r\n        \"location\": {\"city\": \"New Kensington\",\"state\": \"PA\"},\r\n        \"categories\": [{\"alias\": \"catering\", \"title\": \"Caterers\"}]\r\n    },\r\n    {\r\n        \"id\": \"M7UUtqg0K09T6Z0yIy0Hlw\", \r\n        \"name\": \"Earls Kitchen + Bar\", \r\n        \"image_url\": \"https://s3-media1.fl.yelpcdn.com/bphoto/qBaKcdqF3zBxrcWkToduJg/o.jpg\", \r\n        \"rating\": 3, \r\n        \"location\": {\"city\": \"Calgary\",\"state\": \"AB\"},\r\n        \"categories\": [{\"alias\": \"newcanadian\", \"title\": \"Canadian (New)\"}]\r\n    },\r\n    {\r\n        \"id\": \"XFV_KWgCMVR9gi6m4EaFVA\", \r\n        \"name\": \"Mile-Ex Restaurant\", \r\n        \"image_url\": \"https://s3-media1.fl.yelpcdn.com/bphoto/zaZUqxfChUo2o-zFhjke_g/o.jpg\", \r\n        \"rating\": 4.5, \r\n        \"location\": {\"city\": \"Montreal\",\"state\": \"QC\"},\r\n        \"categories\": [{\"alias\": \"newcanadian\", \"title\": \"Canadian (New)\"}]\r\n    },\r\n    {\r\n        \"id\": \"cMrCi3nAcBi3aUKDRAySiw\", \r\n        \"name\": \"Big Mamma's Boy\", \r\n        \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/7RTBPcvzm6lKsCWiaU8DSw/o.jpg\", \r\n        \"rating\": 3.5, \r\n        \"location\": {\"city\": \"Toronto\",\"state\": \"ON\"},\r\n        \"categories\": [{\"alias\": \"italian\", \"title\": \"Italian\"}]\r\n    },\r\n    {\r\n        \"id\": \"HwV2hQr7fbpiG8wODWJQ1w\", \r\n        \"name\": \"Azteca Mexican Restaurant\", \r\n        \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/F6CADAG9tHGt74Yfws_gjg/o.jpg\", \r\n        \"rating\": 3.5, \r\n        \"location\": {\"city\": \"Charlotte\",\"state\": \"NC\"},\r\n        \"categories\": [{\"alias\": \"mexican\", \"title\": \"Mexican\"}]\r\n    }\r\n]","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport axios from 'axios'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Row } from 'react-bootstrap'\r\n\r\nimport { API_KEY } from '../Config';\r\n\r\nconst Recomm = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [details, setDetails] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const recPar = { \"resId\": props.location.state.selectedId, \"number\": 4 }\r\n        setIsLoading(true);\r\n        fetch('http://127.0.0.1:5000/Yelp/',\r\n            {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify(recPar)\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response.result)\r\n                response.result.forEach(id => {\r\n                    axios.get(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${id}`, {\r\n                        headers: {\r\n                            Authorization: `Bearer ${API_KEY}`,\r\n                            'Content-Type': 'application/x-www-form-urlencoded'\r\n                        }\r\n                    }).then((res) => {\r\n                        setDetails((details) => [...details, res.data])\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    })\r\n                })\r\n                setIsLoading(false);\r\n            });\r\n    }, [props.location.state.selectedId])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <h1 style={{ textAlign: 'center', marginTop: '20%' }}>......loading recommendations</h1>\r\n        )\r\n    }\r\n    else {\r\n        console.log(details)\r\n        return (\r\n            <div className=\"recomm-list\">\r\n                <Container>\r\n                    <Row>\r\n                        {\r\n                            details.map((detail) => {\r\n                                return (\r\n                                    <div\r\n                                        className=\"card-wrapper\"\r\n                                        key={detail.id}\r\n                                        style={{\r\n                                            width: \"15em\",\r\n                                            margin: \"auto\",\r\n                                            marginTop: \"2rem\",\r\n                                            borderStyle: \"solid\",\r\n                                            borderWidth: \"0.4em\",\r\n                                            borderColor: \"#B22222\"\r\n                                        }}\r\n                                    >\r\n                                        <Card>\r\n                                            <Card.Img\r\n                                                variant=\"top\"\r\n                                                src={detail.image_url}\r\n                                                style={{\r\n                                                    background: \"#d6d6c2\",\r\n                                                    width: \"100%\",\r\n                                                    height: \"15em\"\r\n                                                }}\r\n                                            />\r\n                                            <Card.Body style={{ width: '100%' }}>\r\n                                                <ListGroup className=\"flush\">\r\n                                                    <ListGroup.Item>{'Name: ' + detail.name}</ListGroup.Item>\r\n                                                    <ListGroup.Item>{'Location: ' + detail.location.state + ', ' + detail.location.city}</ListGroup.Item>\r\n                                                    <ListGroup.Item>{'Category: ' + detail.categories[0].title}</ListGroup.Item>\r\n                                                    <ListGroup.Item>{'Rating: ' + detail.rating}</ListGroup.Item>\r\n                                                </ListGroup>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Row>\r\n                    <Row>\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            onClick={() => history.goBack()}\r\n                            style={{ margin: \"auto\", marginTop: \"2em\", fontSize: '2em' }}\r\n                        >\r\n                            GO BACK TO SELECTION PAGE\r\n                        </Button>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Recomm;","import React from 'react';\r\n\r\nconst NoMatch = () => {\r\n    return (\r\n        <div>\r\n            <h2>No Match Path</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoMatch;","// import firebase from 'firebase';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBcFaFt4-fQ5pEKnMLFNCqSUv5KVoMh4_Y\",\r\n    authDomain: \"yelprecommender-6864d.firebaseapp.com\",\r\n    databaseURL: \"https://yelprecommender-6864d.firebaseio.com\",\r\n    projectId: \"yelprecommender-6864d\",\r\n    storageBucket: \"yelprecommender-6864d.appspot.com\",\r\n    messagingSenderId: \"188821918678\",\r\n    appId: \"1:188821918678:web:a4d3b0e472f7e8ac254a77\"\r\n}\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport default firebase;","import React, { useState, useEffect } from 'react'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Row, Col, Image } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { API_KEY, initialData } from '../Config';\r\nimport YelpBackGround from '../Assets/yelp-black.jpg';\r\nimport './StartPage.css'\r\n\r\nconst StartPage = (props) => {\r\n    const [carIndex, setCarIndex] = useState(0);\r\n    const [details, setDetails] = useState(initialData)\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSelect = (selectedIndex) => {\r\n        setCarIndex(selectedIndex);\r\n    };\r\n\r\n    useEffect(() => {\r\n        props.idData.forEach(id => {\r\n            axios.get(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${API_KEY}`,\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            }).then((res) => {\r\n                setDetails((details) => [...details, res.data])\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        })\r\n    }, [props.idData])\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <div style={{ justifyContent: 'center', marginBottom: '1em' }} className=\"d-flex flex-row\">\r\n                <Image src={YelpBackGround} style={{ width: '10em', height: '6em', marginRight: '0.5em' }} roundedCircle />\r\n                <p className=\"title\">Select a restaurant you like!</p>\r\n            </div>\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={1} md={2}></Col>\r\n                    <Col xs={4} md={8}>\r\n                        <Carousel activeIndex={carIndex} onSelect={handleSelect} className=\"carousel\">\r\n                            {details.map((detail, index) => {\r\n                                return (\r\n                                    <Carousel.Item className=\"carousel-item\" key={index}>\r\n                                        <img\r\n                                            style={{ width: '100%', height: '25em' }}\r\n                                            src={detail.image_url}\r\n                                            alt=\"slide\"\r\n                                            onClick={() => {\r\n                                                history.push({\r\n                                                    pathname: \"/recomm\",\r\n                                                    state: { selectedId: details[carIndex].id }\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                        <Carousel.Caption style={{ color: '#00BFFF', fontSize: '2em' }}>\r\n                                            <h3>{'Name: ' + detail.name}</h3>\r\n                                            <h3>{'Location: ' + detail.location.state + ', ' + detail.location.city}</h3>\r\n                                            <h3>{'Category: ' + detail.categories[0].title}</h3>\r\n                                            <h3>{'Rating: ' + detail.rating}</h3>\r\n                                        </Carousel.Caption>\r\n                                    </Carousel.Item>\r\n                                )\r\n                            }\r\n                            )}\r\n                        </Carousel>\r\n                    </Col>\r\n                    <Col xs={1} md={2}></Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartPage;","import React, { useState, useEffect } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Recomm from './Components/Recomm';\nimport NoMatch from './Components/NoMatch';\nimport firebase from './Components/FireBase'\nimport StartPage from './Components/StartPage';\n\nfunction App() {\n  const [idData, setIdData] = useState([]);\n\n  useEffect(() => {\n    const idRef = firebase.database().ref('/');\n    idRef.on('value', (snapshot) => {\n      let data = snapshot.val();\n      let newIdData = []\n      // Read all database data\n      // for (let index in data) {\n      //     newIdData.push(data[index].id)\n      // }\n      for (var i = 0; i < 5; i++) {\n        let rand = Math.floor(Math.random() * data.length)\n        newIdData.push(data[rand.toString()].id)\n      }\n      setIdData(newIdData);\n    });\n  }, [])\n\n  return (\n    <div>\n      <Router basename='/'>\n        <Switch>\n          <Route \n            exact path='/'\n            render={() => <StartPage idData={idData} />} \n          />\n          <Route path='/recomm' component={Recomm} />\n          <Route component={NoMatch} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}